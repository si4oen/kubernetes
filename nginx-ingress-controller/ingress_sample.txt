### kubectl create secret tls ${CERT_NAME} --key ${KEY_FILE} --cert ${CERT_FILE}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: codegen-ingress
  namespace: dev
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    #nginx.ingress.kubernetes.io/whitelist-source-range: ip1/32, ip2/32, ip3/32
spec:
  tls:
  - hosts:
    - host1.testlab.local
    secretName: tls-testlablocal
  rules:
  - host: host1.testlab.local
    http:
      paths:
      - path: /
        backend:
          serviceName: codegen-deploy
          servicePort: 8080
		  
---		  
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: keycloak-standalone-ingress
  namespace: dev
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #nginx.ingress.kubernetes.io/whitelist-source-range: ip1/32, ip2/32, ip3/32
spec:
  tls:
  - hosts:
    - host2.testlab.local
    secretName: tls-testlablocal
  rules:
  - host: host2.testlab.local
    http:
      paths:
      - path: /
        backend:
          serviceName: keycloak-standalone-deploy
          servicePort: 8443
      - path: /auth
        backend:
          serviceName: keycloak-standalone-deploy
          servicePort: 8443